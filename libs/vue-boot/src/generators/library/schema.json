{
  "$schema": "http://json-schema.org/schema",
  "cli": "nx",
  "$id": "Library",
  "title": "Create a Vue library",
  "description": "Create a Vue library for a Nx workspace",
  "type": "object",
  "examples": [
    {
      "command": "nx g @longstupay/vue-nx-boot:library my-lib --directory=ui",
      "description": "Cenerate `libs/ui/my-lib`"
    }
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "Library name",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the library?",
      "pattern": "^[a-zA-Z].*$",
      "x-priority": "important"
    },
    "directory": {
      "type": "string",
      "description": "A directory where the lib is placed.",
      "alias": "dir",
      "x-priority": "important"
    },
    "style": {
      "description": "The file extension to be used for style files.",
      "type": "string",
      "default": "css",
      "alias": "s",
      "x-prompt": {
        "message": "Which stylesheet format would you like to use?",
        "type": "list",
        "items": [
          { "value": "css", "label": "CSS" },
          {
            "value": "scss",
            "label": "SASS(.scss)       [ http://sass-lang.com          ]"
          },
          {
            "value": "styl",
            "label": "Stylus(.styl)     [ http://stylus-lang.com        ]"
          },
          {
            "value": "less",
            "label": "LESS              [ http://lesscss.org            ]"
          },
          {
            "value": "none",
            "label": "None"
          }
        ]
      }
    },
    "linter": {
      "description": "The tool to use for running lint checks.",
      "type": "string",
      "enum": ["eslint", "none"],
      "default": "eslint"
    },
    "unitTestRunner": {
      "type": "string",
      "enum": ["jest", "vitest", "none"],
      "description": "Test runner to use for unit tests.",
      "x-prompt": "What unit test runner should be used?"
    },
    "inSourceTests": {
      "type": "boolean",
      "default": false,
      "description": "When using Vitest, separate spec files will not be generated and instead will be included within the source files."
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the library (used for linting).",
      "alias": "t"
    },
    "skipFormat": {
      "description": "Skip formatting files.",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    },
    "skipTsConfig": {
      "type": "boolean",
      "default": false,
      "description": "Do not update `tsconfig.json` for development experience.",
      "x-priority": "internal"
    },
    "pascalCaseFiles": {
      "type": "boolean",
      "description": "Use pascal case component file name (e.g. `App.vue`).",
      "alias": "P",
      "default": false
    },
    "routing": {
      "type": "boolean",
      "description": "Generate library with routes."
    },
    "appProject": {
      "type": "string",
      "description": "The application project to add the library route to.",
      "alias": "a"
    },
    "publishable": {
      "type": "boolean",
      "description": "Create a publishable library."
    },
    "buildable": {
      "type": "boolean",
      "default": false,
      "description": "Generate a buildable library that uses rollup to bundle.",
      "x-deprecated": "Use the `bundler` option for greater control (none, vite, rollup)."
    },
    "importPath": {
      "type": "string",
      "description": "The library name used to import it, like `@myorg/my-awesome-lib`."
    },
    "component": {
      "type": "boolean",
      "description": "Generate a default component.",
      "default": true
    },
    "js": {
      "type": "boolean",
      "description": "Generate JavaScript files rather than TypeScript files.",
      "default": false
    },
    "globalCss": {
      "type": "boolean",
      "description": "When `true`, the stylesheet is generated using global CSS instead of CSS modules (e.g. file is `*.css` rather than `*.module.css`).",
      "default": false
    },
    "strict": {
      "type": "boolean",
      "description": "Whether to enable tsconfig strict mode or not.",
      "default": true
    },
    "setParserOptionsProject": {
      "type": "boolean",
      "description": "Whether or not to configure the ESLint `parserOptions.project` option. We do not do this by default for lint performance reasons.",
      "default": false
    },
    "bundler": {
      "type": "string",
      "description": "The bundler to use. Choosing 'none' means this library is not buildable.",
      "enum": ["none", "vite", "rollup"],
      "default": "none",
      "x-prompt": "Which bundler would you like to use to build the library? Choose 'none' to skip build setup.",
      "x-priority": "important"
    },
    "compiler": {
      "type": "string",
      "enum": ["babel", "swc"],
      "default": "babel",
      "description": "Which compiler to use. Only applies to `bundler: 'rollup'`."
    },
    "skipPackageJson": {
      "description": "Do not add dependencies to `package.json`.",
      "type": "boolean",
      "default": false,
      "x-priority": "internal"
    },
    "minimal": {
      "description": "Create a Vue library with a minimal setup, no separate test files.",
      "type": "boolean",
      "default": false
    }
  },
  "required": ["name"]
}
